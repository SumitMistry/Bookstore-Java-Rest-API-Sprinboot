spring.application.name=Bookstore
spring.datasource.url=jdbc:mysql://localhost:3306/bookstore
spring.datasource.username=root
spring.datasource.password=1029
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

HealthCheckMessage=Sumit and Bluey are fine... Message from "APP.Properties + Controller view_controller_test.java"


# this is to set the sprinboot's core package logging level to debug mode.
# among the debug log in terminal printed while app starts, refer to CONDITIONS EVALUATION REPORT, positive, negative matches...
# values are= TRACE  DEBUG  INFO  WARN  ERROR  OFF
# we want to set profile DEV vs PROD.
# For DEV we want logger to logging= TRACE detailed level
# For PROD we want logger to logging = INFO level
logging.level.org.springframework=INFO
logging.level.Springboot.Bookstore.*=DEBUG
logging.level.Springboot.Bookstore.Controller.Login_Controller=DEBUG
logging.level.Springboot.Bookstore.Controller=DEBUG


# JSP / View
# This is to set JSP web pages. Refer to below code/steps to know how JSP setup/config works...
# JSP Java code:      /src/main/java/Springboot/Bookstore/Controller/TEST/Test_View_JSP_Controller.java
# JSP file sample:    /src/main/resources/META-INF/resources/WEB-INF/jsp/login.jsp
# View-resolver helps/map/resolve the resource(login) file and (.jsp) to dispatcher servelet.
# the output of view-resolver will be e.g. (/WEB-INF/jsp/login.jsp) and this will be mapped to view
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

# THIS below is for actuator,
# Step-1: once added MVN pom dependency,
# Step-2: just add the below line in properties, This will display more details of Actuator related details.
# Step-3: Run the app, and login to http://localhost:8080/actuator to access the page...
management.endpoints.web.exposure.include=*

# Configuring profiles of Spring using the below;
# added 2 more files named application-UAT.properties , application-PROD.properties
spring.profiles.active=prod




# database.url=jdbc:postgresql:/localhost:5432/instance
# database.username=foo
# database.password=bar

# And then let?s use the annotation to map them to a database object:

# @ConfigurationProperties(prefix = "login-services")
# public class AAA {
    # String url;
    # String username;
    # String password;
login-services.url=http://default.sumit_book.com
login-services.user        = default.user
login-services.pass        = default.pass


